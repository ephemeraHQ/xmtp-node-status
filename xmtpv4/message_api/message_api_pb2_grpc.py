# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from xmtpv4.message_api import message_api_pb2 as xmtpv4_dot_message__api_dot_message__api__pb2


class ReplicationApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeEnvelopes = channel.unary_stream(
                '/xmtp.xmtpv4.message_api.ReplicationApi/SubscribeEnvelopes',
                request_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.SubscribeEnvelopesRequest.SerializeToString,
                response_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.SubscribeEnvelopesResponse.FromString,
                _registered_method=True)
        self.QueryEnvelopes = channel.unary_unary(
                '/xmtp.xmtpv4.message_api.ReplicationApi/QueryEnvelopes',
                request_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.QueryEnvelopesRequest.SerializeToString,
                response_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.QueryEnvelopesResponse.FromString,
                _registered_method=True)
        self.PublishPayerEnvelopes = channel.unary_unary(
                '/xmtp.xmtpv4.message_api.ReplicationApi/PublishPayerEnvelopes',
                request_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.PublishPayerEnvelopesRequest.SerializeToString,
                response_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.PublishPayerEnvelopesResponse.FromString,
                _registered_method=True)
        self.GetInboxIds = channel.unary_unary(
                '/xmtp.xmtpv4.message_api.ReplicationApi/GetInboxIds',
                request_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetInboxIdsRequest.SerializeToString,
                response_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetInboxIdsResponse.FromString,
                _registered_method=True)
        self.GetNewestEnvelope = channel.unary_unary(
                '/xmtp.xmtpv4.message_api.ReplicationApi/GetNewestEnvelope',
                request_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetNewestEnvelopeRequest.SerializeToString,
                response_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetNewestEnvelopeResponse.FromString,
                _registered_method=True)


class ReplicationApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubscribeEnvelopes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryEnvelopes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishPayerEnvelopes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInboxIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewestEnvelope(self, request, context):
        """Get the newest envelope for each topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplicationApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeEnvelopes': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeEnvelopes,
                    request_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.SubscribeEnvelopesRequest.FromString,
                    response_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.SubscribeEnvelopesResponse.SerializeToString,
            ),
            'QueryEnvelopes': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryEnvelopes,
                    request_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.QueryEnvelopesRequest.FromString,
                    response_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.QueryEnvelopesResponse.SerializeToString,
            ),
            'PublishPayerEnvelopes': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishPayerEnvelopes,
                    request_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.PublishPayerEnvelopesRequest.FromString,
                    response_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.PublishPayerEnvelopesResponse.SerializeToString,
            ),
            'GetInboxIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInboxIds,
                    request_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetInboxIdsRequest.FromString,
                    response_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetInboxIdsResponse.SerializeToString,
            ),
            'GetNewestEnvelope': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewestEnvelope,
                    request_deserializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetNewestEnvelopeRequest.FromString,
                    response_serializer=xmtpv4_dot_message__api_dot_message__api__pb2.GetNewestEnvelopeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xmtp.xmtpv4.message_api.ReplicationApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('xmtp.xmtpv4.message_api.ReplicationApi', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ReplicationApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubscribeEnvelopes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/xmtp.xmtpv4.message_api.ReplicationApi/SubscribeEnvelopes',
            xmtpv4_dot_message__api_dot_message__api__pb2.SubscribeEnvelopesRequest.SerializeToString,
            xmtpv4_dot_message__api_dot_message__api__pb2.SubscribeEnvelopesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryEnvelopes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xmtp.xmtpv4.message_api.ReplicationApi/QueryEnvelopes',
            xmtpv4_dot_message__api_dot_message__api__pb2.QueryEnvelopesRequest.SerializeToString,
            xmtpv4_dot_message__api_dot_message__api__pb2.QueryEnvelopesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PublishPayerEnvelopes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xmtp.xmtpv4.message_api.ReplicationApi/PublishPayerEnvelopes',
            xmtpv4_dot_message__api_dot_message__api__pb2.PublishPayerEnvelopesRequest.SerializeToString,
            xmtpv4_dot_message__api_dot_message__api__pb2.PublishPayerEnvelopesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInboxIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xmtp.xmtpv4.message_api.ReplicationApi/GetInboxIds',
            xmtpv4_dot_message__api_dot_message__api__pb2.GetInboxIdsRequest.SerializeToString,
            xmtpv4_dot_message__api_dot_message__api__pb2.GetInboxIdsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNewestEnvelope(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xmtp.xmtpv4.message_api.ReplicationApi/GetNewestEnvelope',
            xmtpv4_dot_message__api_dot_message__api__pb2.GetNewestEnvelopeRequest.SerializeToString,
            xmtpv4_dot_message__api_dot_message__api__pb2.GetNewestEnvelopeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
